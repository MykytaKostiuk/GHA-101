name: Pipeline

on: [push]
env:
  APPLICATION_NAME: basic application
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Setup Python environment
      uses: actions/setup-python@v6
    - name: Install requirements
      run: pip install --quiet --requirement requirements.txt
    - name: Lint code
      run: |
        flake8 --ignore=E501,E231 *.py
        pylint --disable=C0301 *.py
    - name: Run unit tests
      run: |
        python -m unittest --verbose --failfast
  
  build_image:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
    - uses: actions/checkout@v5
    - name: Set UP AWS Credentials
      uses: aws-actions/configure-aws-credentials@v5.0.0
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    - name: Build, tag, and push image to Amazon ECR
      env:
        REGISTRY: 171682868539.dkr.ecr.us-east-1.amazonaws.com/gha
        REPOSITORY: 101
        IMAGE_TAG: ${{ github.sha }}
        IMAGE: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
      run: |
          echo $IMAGE >> $GITHUB_ENV
          docker build -t $IMAGE .
          docker push $IMAGE
          
    - name: Run unit tests in the container
      run: |
        docker run $IMAGE python -m unittest --verbose --failfast
        